# SH INTO A POD
kubectl exec -it <POD_NAME>  -- /bin/sh

# SH INTO A POD WITH MULTIPLE CONTAINERS
kubectl exec -it <POD_NAME> -c <CONTAINER_NAME> -- /bin/sh

# CHECK REPLAY STATUS
kubectl exec <POD_NAME> -- wget -q -O - --no-check-certificate --method GET  --timeout=0 'http://localhost:8080/replay/status' | jq

# TRIGGER REPLAY
kubectl exec <POD_NAME> -- wget -q -O - --no-check-certificate --method POST  --timeout=0 'http://localhost:8080/replay' | jq

# TRIGGER REPLAY WITH DATE
kubectl exec <POD_NAME> -- wget -q -O - --no-check-certificate --method POST  --timeout=0 'http://localhost:8080/replay?startTime=01/01/2022&endTime=02/10/2022' | jq

# KUBECTL PORT FORWARD
kubectl port-forward deploy/<DEPLYMENT_NAME> 8090:8080

# GET MONGODB SECRET
# for GCP, `pri` substring should be removed from the connection string returned
kubectl get secret <SERVICE_NAME>-ist-mongodb  -o yaml | grep uri | awk '{print $2}' | base64 --decode

# GET RABBIT SECRET URI
kubectl get secret <SERVICE_NAME>-ist-rabbitmq  -o yaml | grep uri | awk '{print $2}' | base64 --decode

# GET RABBIT SECRET USERNAME
kubectl get secret <SERVICE_NAME>-ist-rabbitmq  -o yaml | grep username | awk '{print $2}' | base64 --decode

# GET CONTEXTS
kubectl config get-contexts

# CHANGE CONTEXT
kubectl config use-context <CONTEXT_NAME>

# GET LOGGERS
kubectl exec integration-run-events-query-v2-6c754d5fb-4blhx -- wget -q -O - --no-check-certificate --method POST  --timeout=0 'http://localhost:8080/actuator/loggers' | jq

#################################################################################################################################
#################################################################################################################################

- TRIGGER REPLAY IN ATL
kubectl exec integration-run-events-query-v2-54968769f7-6kf5q -- wget -q -O - --no-check-certificate --method POST  --timeout=0 'http://localhost:8080/replay?startTime=03/17/2022' | jq

- CHECK REPLAY STATUS ATL
kubectl exec integration-run-events-query-v2-54968769f7-6kf5q -- wget -q -O - --no-check-certificate --method GET  --timeout=0 'http://localhost:8080/replay/status' | jq



- TRIGGER REPLAY IN PLAS
kubectl exec integration-run-events-query-v2-6c649b99cb-brtfk -- wget -q -O - --no-check-certificate --method POST  --timeout=0 'http://localhost:8080/replay?startTime=01/22/2022' | jq

- CHECK REPLAY STATUS PALS
kubectl exec integration-run-events-query-v2-6c649b99cb-brtfk -- wget -q -O - --no-check-certificate --method GET  --timeout=0 'http://localhost:8080/replay/status' | jq



- TRIGGER REPLAY IN TOR
kubectl exec integration-run-events-query-v2-84f57b98bb-lk6zx -- wget -q -O - --no-check-certificate --method POST  --timeout=0 'http://localhost:8080/replay?startTime=01/22/2022' | jq

- CHECK REPLAY STATUS TOR
kubectl exec integration-run-events-query-v2-84f57b98bb-lk6zx -- wget -q -O - --no-check-certificate --method GET  --timeout=0 'http://localhost:8080/replay/status' | jq



- TRIGGER REPLAY IN DLAS
kubectl exec integration-run-events-query-v2-5f57dcd654-bzk2v -- wget -q -O - --no-check-certificate --method POST  --timeout=0 'http://localhost:8080/replay?startTime=01/01/2022' | jq

- CHECK REPLAY STATUS DLAS
kubectl exec integration-run-events-query-v2-5f57dcd654-bzk2v -- wget -q -O - --no-check-certificate --method GET  --timeout=0 'http://localhost:8080/replay/status' | jq

#################################################################################################################################
#################################################################################################################################

mongo `kubectl get secret integration-run-status-cmd-ist-mongodb  -o yaml | grep uri | awk '{print $2}' | base64 --decode`
db.getCollection('domainevents').find({}).count()

kubectl get secret cmp-integration-adapter-uat-ist-mongodb  -o yaml | grep uri | awk '{print $2}' | base64 --decode

kubectl exec -it cmp-integration-adapter-uat-bd577d649-52d62 -- /bin/sh


kubectl get secret ded-integration-adapter-ist-mongodb  -o yaml | grep uri | awk '{print $2}' | base64 --decode

kubectl get secret integration-continuation-worker-ist-rabbitmq  -o yaml | grep uri | awk '{print $2}' | base64 --decode
